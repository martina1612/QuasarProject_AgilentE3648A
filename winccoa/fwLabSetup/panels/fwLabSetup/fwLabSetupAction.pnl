<?xml version="1.0" encoding="UTF-8"?>
<panel version="14">
 <properties>
  <prop name="Name">
   <prop name="en_US.utf8"></prop>
   <prop name="en_US.iso88591"></prop>
  </prop>
  <prop name="Size">400 200</prop>
  <prop name="BackColor">_3DFace</prop>
  <prop name="RefPoint">200 140</prop>
  <prop name="InitAndTermRef">False</prop>
  <prop name="SendClick">False</prop>
  <prop name="RefFileName"></prop>
  <prop name="KeepInMemory">False</prop>
  <prop name="DPI">96</prop>
  <prop name="layoutType">None</prop>
 </properties>
 <events>
  <script name="ScopeLib" isEscaped="1"><![CDATA[#uses &quot;fwDevice/fwDevice.ctl&quot;

string g_sHierarchyType;
string g_sDpName = dpSubStr($sDpName, DPSUB_SYS_DP) ;
string g_channelnr;
dyn_dyn_string g_ddsElements;

void initialize_globalVariables()
{
//g_sDpName
g_sDpName = dpSubStr($sDpName, DPSUB_SYS_DP) ;

//g_channelnr
dyn_string split = strsplit( g_sDpName, &quot;channel&quot;);
dyn_string split2 = strsplit(split[8], &quot;/&quot;);
g_channelnr = split2[1];

//g_ddsElements
string sDeviceDpType       = dpTypeName(g_sDpName);
dyn_string split = strsplit($sDpName, &quot;/&quot;);
string g_sDpSupplyIdn = split[1]+&quot;.idn&quot;;
string sDeviceModel;
dpGet( g_sDpSupplyIdn, sDeviceModel);
dyn_string exceptionInfo;
fwDevice_getConfigElements(sDeviceDpType, fwDevice_ALL, g_ddsElements, exceptionInfo, sDeviceModel, g_sDpName);
if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
}


// ------------------------------------------------------------------------------------------------

enableButtons(bool enabled)
{
	mask.enabled(enabled);
	maskAll.enabled(enabled);
	unMask.enabled(enabled);
	unMaskAll.enabled(enabled);
	ack.enabled(enabled);
	ackAll.enabled(enabled);
	close.enabled(enabled);
}

// ------------------------------------------------------------------------------------------------

showUserFeedback(string sMessage)
{
  feedbackLabel.visible(TRUE);
  feedbackArrow.visible(TRUE);
  feedbackLabel.text = sMessage;

  delay(5);

  feedbackLabel.visible(FALSE);
  feedbackArrow.visible(FALSE);
}
]]></script>
  <script name="Initialize" isEscaped="1"><![CDATA[main()
{

  initialize_globalVariables();
  //if $sdpName is of type DP,
  //set  mask/unmask/ack buttons inactive and invisible, as &quot;channel&quot; DP has no alerts itself,
  //leave maskAll/unMaskAll/ackAll active and visible, as they act on all DP elements
  if ( dpExists($sDpName) )
    setMultiValue(  &quot;ack&quot;, &quot;enabled&quot;, FALSE,
                    &quot;mask&quot;, &quot;enabled&quot;, FALSE,
                    &quot;unMask&quot;, &quot;enabled&quot;, FALSE,
                    &quot;ack&quot;, &quot;visible&quot;, FALSE,
                    &quot;mask&quot;, &quot;visible&quot;, FALSE,
                    &quot;unMask&quot;, &quot;visible&quot;, FALSE
                    );
  else
    //if $sDpName not of type DP, I consider it of type dpElement
    //so, I do the opposite
    setMultiValue(  &quot;ackAll&quot;, &quot;enabled&quot;, FALSE,
                    &quot;maskAll&quot;, &quot;enabled&quot;, FALSE,
                    &quot;unMaskAll&quot;, &quot;enabled&quot;, FALSE,
                    &quot;ackAll&quot;, &quot;visible&quot;, FALSE,
                    &quot;maskAll&quot;, &quot;visible&quot;, FALSE,
                    &quot;unMaskAll&quot;, &quot;visible&quot;, FALSE
                    );

	// if $sHierarchyType is not passed take as default hardware tree
	if(isDollarDefined(&quot;$sHierarchyType&quot;))
	{
		g_sHierarchyType = $sHierarchyType;
	}
	else
	{
		g_sHierarchyType = fwDevice_HARDWARE;
	}
	enableButtons(TRUE);

}
]]></script>
 </events>
 <layers>
  <layer layerId="0">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer1</prop>
  </layer>
  <layer layerId="1">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer2</prop>
  </layer>
  <layer layerId="2">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer3</prop>
  </layer>
  <layer layerId="3">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer4</prop>
  </layer>
  <layer layerId="4">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer5</prop>
  </layer>
  <layer layerId="5">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer6</prop>
  </layer>
  <layer layerId="6">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer7</prop>
  </layer>
  <layer layerId="7">
   <prop name="Visible">True</prop>
   <prop name="Name">Layer8</prop>
  </layer>
 </layers>
 <shapes>
  <shape Name="unMask" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">7</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">150 112</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">7</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">130 84</prop>
    <prop name="Size">110 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Unmask</prop>
     <prop name="en_US.iso88591">Unmask</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	enableButtons(FALSE);
  for(int dpeInd=1; dpeInd&lt;=dynlen(g_ddsElements[1]); dpeInd++)
  {
	fwDevice_setAlert($sDpName+g_ddsElements[1][dpeInd], fwDevice_ALERT_UNMASK, exceptionInfo);
  }
	enableButtons(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
  else
  {
    showUserFeedback(&quot;Alarm unmasked.&quot;);
  }
}
]]></script>
   </events>
  </shape>
  <shape Name="mask" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">8</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">160 150</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">8</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 84</prop>
    <prop name="Size">110 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Mask</prop>
     <prop name="en_US.iso88591">Mask</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	enableButtons(FALSE);
  for(int dpeInd=1; dpeInd&lt;=dynlen(g_ddsElements[1]); dpeInd++)
  {
	fwDevice_setAlert($sDpName+g_ddsElements[1][dpeInd], fwDevice_ALERT_MASK, exceptionInfo);
  }
	enableButtons(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
  else
  {
    showUserFeedback(&quot;Alarm masked.&quot;);
  }
}
]]></script>
   </events>
  </shape>
  <shape Name="maskAll" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">9</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">173 280</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">9</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 119</prop>
    <prop name="Size">110 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Mask all</prop>
     <prop name="en_US.iso88591">Mask all</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	enableButtons(FALSE);
  for(int dpeInd=1; dpeInd&lt;=dynlen(g_ddsElements[1]); dpeInd++)
  {
	//fwDevice_setAlertRecursively($sDpName+g_ddsElements[1][dpeInd], fwDevice_ALERT_MASK, exceptionInfo, g_sHierarchyType);
  fwAlertConfig_deactivate($sDpName+g_ddsElements[1][dpeInd], exceptionInfo);
  }
	enableButtons(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
  else
  {
    showUserFeedback(&quot;All alarms in hierarchy masked.&quot;);
  }
}

]]></script>
   </events>
  </shape>
  <shape Name="ackAll" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">10</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">360 112</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">10</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">270 119</prop>
    <prop name="Size">120 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Acknowledge all</prop>
     <prop name="en_US.iso88591">Acknowledge all</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	enableButtons(FALSE);

  for(int dpeInd=1; dpeInd&lt;=dynlen(g_ddsElements[1]); dpeInd++)
  {
//	fwDevice_setAlertRecursively($sDpName+g_ddsElements[1][dpeInd], fwDevice_ALERT_ACK, exceptionInfo, g_sHierarchyType);
	fwAlertConfig_acknowledge($sDpName+g_ddsElements[1][dpeInd], exceptionInfo);
  }
	enableButtons(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
  else
  {
    showUserFeedback(&quot;All alarms in hierarchy acknowledged.&quot;);
  }
}

]]></script>
   </events>
  </shape>
  <shape Name="ack" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">11</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">509 -53</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">11</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">270 84</prop>
    <prop name="Size">120 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Acknowledge</prop>
     <prop name="en_US.iso88591">Acknowledge</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	enableButtons(FALSE);

  for(int dpeInd=1; dpeInd&lt;=dynlen(g_ddsElements[1]); dpeInd++)
  {
	fwDevice_setAlert($sDpName+g_ddsElements[1][dpeInd], fwDevice_ALERT_ACK, exceptionInfo);
  }
	enableButtons(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
  else
  {
    showUserFeedback(&quot;Alarm acknowledged.&quot;);
  }
}
]]></script>
   </events>
  </shape>
  <shape Name="unMaskAll" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">16</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">163 245</prop>
    <prop name="Enable">False</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">16</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">130 119</prop>
    <prop name="Size">110 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Unmask all</prop>
     <prop name="en_US.iso88591">Unmask all</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
	dyn_string exceptionInfo;

	enableButtons(FALSE);
  for(int dpeInd=1; dpeInd&lt;=dynlen(g_ddsElements[1]); dpeInd++)
  {
//	fwDevice_setAlertRecursively($sDpName+g_ddsElements[1][dpeInd], fwDevice_ALERT_UNMASK, exceptionInfo, g_sHierarchyType);
    fwAlertConfig_activate($sDpName+g_ddsElements[1][dpeInd], exceptionInfo);
  }
	enableButtons(TRUE);

	if(dynlen(exceptionInfo) &gt; 0)
  {
		fwExceptionHandling_display(exceptionInfo);
  }
  else
  {
    showUserFeedback(&quot;All alarms in hierarchy unmasked.&quot;);
  }
}

]]></script>
   </events>
  </shape>
  <shape Name="close" shapeType="PUSH_BUTTON" layerId="0">
   <properties>
    <prop name="serialId">29</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">314 164</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_ButtonText</prop>
    <prop name="BackColor">_Button</prop>
    <prop name="TabOrder">29</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">315 165</prop>
    <prop name="Size">75 25</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Text">
     <prop name="en_US.utf8">Close</prop>
     <prop name="en_US.iso88591">Close</prop>
    </prop>
   </properties>
   <events>
    <script name="Clicked" isEscaped="1"><![CDATA[main()
{
  PanelOff();
}
]]></script>
   </events>
  </shape>
  <shape Name="dpName" shapeType="TEXT_FIELD" layerId="0">
   <properties>
    <prop name="serialId">31</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 40</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_WindowText</prop>
    <prop name="BackColor">_3DFace</prop>
    <prop name="TabOrder">31</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Location">10 40</prop>
    <prop name="Size">380 23</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Editable">False</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
   <events>
    <script name="Initialize" isEscaped="1"><![CDATA[main()
{
	this.text($sDpName);
}]]></script>
   </events>
  </shape>
  <reference parentSerial="-1" Name="" referenceId="0">
   <properties>
    <prop name="FileName">objects/fwGeneral/fwHelpButton.pnl</prop>
    <prop name="Location">270 20</prop>
    <prop name="Geometry">1.001602564102564 0 0 1.001602564102564 94.56730769230766 -18.03205128205128</prop>
    <prop name="TabOrder">37</prop>
    <prop name="dollarParameters">
     <prop name="dollarParameter">
      <prop name="Dollar">$sPanelRelativePath</prop>
      <prop name="Value">fwDeviceEditorNavigator/fwAction</prop>
     </prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
   </properties>
  </reference>
  <shape Name="bgRectangle" shapeType="RECTANGLE" layerId="0">
   <properties>
    <prop name="serialId">41</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20 530</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">FwCorporateColor</prop>
    <prop name="TabOrder">38</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="BorderStyle">Normal</prop>
    <prop name="Location">-1 -1</prop>
    <prop name="Size">402 31</prop>
    <prop name="CornerRadius">0</prop>
    <prop name="Transformable">True</prop>
   </properties>
  </shape>
  <shape Name="title" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">42</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 4</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">True</prop>
    <prop name="ForeColor">white</prop>
    <prop name="BackColor">_Window</prop>
    <prop name="TabOrder">39</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[outline]</prop>
    <prop name="Location">10 4</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,19,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,19,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">Actions</prop>
     <prop name="en_US.iso88591">Actions</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="feedbackLabel" shapeType="PRIMITIVE_TEXT" layerId="0">
   <properties>
    <prop name="serialId">46</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">20.00000000000004 168</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_3DText</prop>
    <prop name="BackColor">_Transparent</prop>
    <prop name="TabOrder">42</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinMiter,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Location">22.00000000000004 169</prop>
    <prop name="Font">
     <prop name="en_US.utf8">Arial,-1,13,5,50,0,0,0,0,0</prop>
     <prop name="en_US.iso88591">Arial,-1,13,5,50,0,0,0,0,0</prop>
    </prop>
    <prop name="Text">
     <prop name="en_US.utf8">User feedback.</prop>
     <prop name="en_US.iso88591">User feedback.</prop>
    </prop>
    <prop name="Distance">2</prop>
    <prop name="BorderOffset">2</prop>
    <prop name="Bordered">False</prop>
    <prop name="Fit">True</prop>
    <prop name="Transformable">True</prop>
    <prop name="TextFormat">[0s,,,AlignLeft]</prop>
   </properties>
  </shape>
  <shape Name="feedbackArrow" shapeType="POLYGON" layerId="0">
   <properties>
    <prop name="serialId">47</prop>
    <prop name="Type"></prop>
    <prop name="RefPoint">10 770</prop>
    <prop name="Enable">True</prop>
    <prop name="Visible">False</prop>
    <prop name="ForeColor">_Transparent</prop>
    <prop name="BackColor">_3DText</prop>
    <prop name="TabOrder">43</prop>
    <prop name="ToolTipText">
     <prop name="en_US.utf8"></prop>
     <prop name="en_US.iso88591"></prop>
    </prop>
    <prop name="layoutAlignment">AlignCenter</prop>
    <prop name="snapMode">Point</prop>
    <prop name="DashBackColor">_Transparent</prop>
    <prop name="AntiAliased">False</prop>
    <prop name="LineType">[solid,oneColor,JoinBevel,CapButt,1]</prop>
    <prop name="BorderZoomable">False</prop>
    <prop name="FillType">[solid]</prop>
    <prop name="Geometry">0.7259259259259259 0 0 0.6825000000000002 2.740740740740741 -355.5250000000001</prop>
    <prop name="Closed">True</prop>
    <prop name="Points">
     <prop name="Location">10 770</prop>
     <prop name="Location">10 790</prop>
     <prop name="Location">20 780</prop>
     <prop name="Location">10 770</prop>
     <prop name="Location">10 790</prop>
    </prop>
   </properties>
  </shape>
 </shapes>
</panel>
